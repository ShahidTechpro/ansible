---
- hosts: node1
  become: true
  become_method: sudo
  become_user: root
  vars:
    # Use "targeted" SELinux policy type
    selinux_policy: targeted
    # Set "enforcing" mode
    selinux_state: enforcing
    selinux_fcontexts:
      - { target: '/webdev(/.*)?', setype: 'user_home_dir_t', ftype: 'd' }
    # Restore SELinux file contexts in '/tmp/test_dir'
    selinux_restore_dirs:
      - /webdev
    selinux_ports:
    selinux_logins:
      - { login: 'admin', seuser: 'staff_u', serange: 's0-s0:c0.c1023',
          state: 'present' }
    # Manage modules
    selinux_modules:
      # Install the 'localpolicy.cil' with priority 300
      - { path: "localpolicy.cil", priority: "300", state: "enabled" }
      # Disable the 'unconfineduser' module with priority 100
      - { name: "unconfineduser", priority: "100", state: "disabled" }
      # Remove the 'temporarypolicy' module with priority 400
      - { name: "temporarypolicy", priority: "400", state: "absent" }

  # Prepare the prerequisites required for this playbook
  tasks:
    - name: Creates directory
      file:
        path: /webdev
        state: directory
        mode: u=rwx,g=rw,o=--,g+s
        owner: webdev 

    - name: Add a Linux System Roles SELinux User
      user:
        comment: Linux System Roles SELinux User
        name: adminr
    - name: execute the role and catch errors
      block:
        - name: Include selinux role
          include_role:
            name: rhel-system-roles.selinux
      rescue:
        # Fail if failed for a different reason than selinux_reboot_required.
        - name: handle errors
          fail:
            msg: "role failed"
          when: not selinux_reboot_required

        - name: restart managed host
          reboot:

        - name: wait for managed host to come back
          wait_for_connection:
            delay: 10
            timeout: 300

        - name: reapply the role
          include_role:
            name: rhel-system-roles.selinux
